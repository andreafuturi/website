import{startRouter as _}from"https://esm.sh/lightweight-router?debug=truee";import{hydrate as y}from"https://esm.sh/preact";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const t of o.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&s(t)}).observe(document,{childList:!0,subtree:!0});function u(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=u(e);fetch(e.href,o)}})();var f;f={__e:function(n,r,u,s){for(var e,o,t;r=r.__;)if((e=r.__c)&&!e.__)try{if((o=e.constructor)&&o.getDerivedStateFromError!=null&&(e.setState(o.getDerivedStateFromError(n)),t=e.__d),e.componentDidCatch!=null&&(e.componentDidCatch(n,s||{}),t=e.__d),t)return e.__E=e}catch(c){n=c}throw n}},typeof Promise=="function"&&Promise.prototype.then.bind(Promise.resolve());var h=0;function v(n,r,u,s,e,o){r||(r={});var t,c,i=r;"ref"in r&&(t=r.ref,delete r.ref);var a={type:n,props:i,key:u,ref:t,__k:null,__:null,__b:0,__e:null,__c:null,constructor:void 0,__v:--h,__i:-1,__u:0,__source:e,__self:o};if(typeof n=="function"&&(t=n.defaultProps))for(c in t)i[c]===void 0&&(i[c]=t[c]);return f.vnode&&f.vnode(a),a}const g=new Map;let E=0;const O=n=>{const r=`c${E++}`;return g.set(r,n),r},d=[],l=new Set,p=(n,r)=>{console.log("ðŸ”„ Starting hydration process...");const u=e=>{(e||document).querySelectorAll("static").forEach(t=>{const c=t.innerHTML;queueMicrotask(()=>{t.innerHTML=c})})};r&&r.forEach(e=>{const o=e.__componentId||O(e);e.__componentId=o,d.some(t=>t.id===o)||(console.log(`âž• Registering new component: ${o}`),d.push({id:o,function:e}))});const s=new IntersectionObserver(async e=>{e.forEach(async o=>{const{target:t}=o;if(l.has(t.id))return;const c=d.find(i=>t.getAttribute("data-component")===i.id);if(o.isIntersecting&&c){const i=JSON.parse(t.getAttribute("props")||"{}");u(t);const a=c.function;y(v(a,{...i}),t),l.add(t.id)}})});d.forEach(({id:e})=>{(n||document).querySelectorAll(`interactive[data-component="${e}"]`).forEach(t=>{l.has(t.id)||s.observe(t)})})},m=[];_({debug:!1,onRouteChange:n=>p(document.querySelector(`route[path="${n}"]`),m)});p(document,m);
